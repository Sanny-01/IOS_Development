//
//  CountriesPresenter.swift
//  Sandro Giorgishvili 28
//
//  Created by TBC on 30.08.22.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol CountriesPresentationLogic
{
    func presentCountries(response: Countries.GetCountries.Response)
    func presentSelectedCountry(response: Countries.ShowCountryDetails.Response)
}

class CountriesPresenter
{
  weak var viewController: CountriesDisplayLogic?
    
    private func configureTableModel(from data: [Country]) -> [AbstractModel] {
        var tableModel = [AbstractModel]()
        
        tableModel.append(contentsOf: data.map { CountryCellModel(title: $0.name) })
        
        return tableModel
    }
}

extension CountriesPresenter: CountriesPresentationLogic {
    func presentSelectedCountry(response: Countries.ShowCountryDetails.Response) {
        viewController?.displaySelectedCountry(viewModel: Countries.ShowCountryDetails.ViewModel())
    }
    func presentCountries(response: Countries.GetCountries.Response) {
        let viewModel = configureTableModel(from: response.data)
        viewController?.displayCountries(viewModel: Countries.GetCountries.ViewModel(tableData: viewModel))
    }
    
}
